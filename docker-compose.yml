services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  app:
    build:
      context: .
      args:
        VERSION: ${VERSION}
        COMMIT: ${COMMIT}
        BUILD_TIME: ${BUILD_TIME}
    environment:
      PORT: ${PORT}
      GIN_MODE: ${GIN_MODE}
      DB_DSN: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=${DB_SSLMODE}"
      ADMIN_API_KEY: ${ADMIN_API_KEY}
      ADMIN_TRUSTED_CIDRS: ${ADMIN_TRUSTED_CIDRS}
      ADMIN_REQUIRE_BOTH: ${ADMIN_REQUIRE_BOTH}
      EXCLUDE_EXCHANGES: ${EXCLUDE_EXCHANGES}
      HTTP_TIMEOUT: ${HTTP_TIMEOUT}
      HTTP_RETRIES: ${HTTP_RETRIES}
      HTTP_BACKOFF_MIN: ${HTTP_BACKOFF_MIN}
      HTTP_BACKOFF_MAX: ${HTTP_BACKOFF_MAX}
      HTTP_USER_AGENT: ${HTTP_USER_AGENT}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    restart: always

volumes:
  pgdata: {}
